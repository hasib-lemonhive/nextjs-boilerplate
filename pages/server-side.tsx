import Head from 'next/head';
import type { NextPage, GetServerSideProps } from 'next';
import { client } from 'src/backend/client';
import { DogsQuery } from 'src/backend/queries/dogs';
import { ISanityDog } from 'src/backend/types/entities/dog';
import Card from '@components/cards/card';
import Link from 'next/link';
import { generateImageUrlFixedDimensions } from 'src/backend/generate-image';
import { CardImageDimensions } from '@components/cards/card/interface';

interface Props {
  dogs: ISanityDog[];
}

const Home: NextPage<Props> = ({ dogs }) => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="section-padding-primary bg-gray dark:bg-black">
        <div className="container">
          <div className="max-w-[800px] mx-auto">
            <div className="text-center">
              <h1 className="text-4xl dark:text-white">
                Welcome to{' '}
                <a
                  href="https://nextjs.org"
                  className="text-primary dark:text-white hover:underline focus:underline"
                >
                  Next.js!
                </a>{' '}
                Template
              </h1>

              <h2 className="mt-10 text-3xl font-bold dark:text-white">
                Here are some country cards with puppy images!
              </h2>

              <Link
                className="inline-block px-4 py-2 mt-5 text-sm font-medium text-white transition-colors ease-in-out rounded shadow dark:bg-white dark:text-danger-light dark:active:text-danger bg-primary hover:bg-danger duration-350 focus:outline-none focus:shadow-none sm:w-auto dark:hover:bg-primary dark:hover:text-white"
                href="/"
              >
                Go Back Home
              </Link>
            </div>

            <div className="grid grid-cols-1 gap-5 mt-10 sm:grid-cols-2">
              {dogs.map((dog: ISanityDog, index: number) => {
                const image = generateImageUrlFixedDimensions(
                  dog.image.imageFile,
                  CardImageDimensions.width,
                  CardImageDimensions.height
                );

                return (
                  <Card
                    key={index}
                    dog={{
                      breed: dog.breed,
                      description: dog.description,
                      name: dog.name,
                      image: {
                        src: image.src,
                        alt: dog.image.altDescription,
                        lqip: image.lqip,
                      },
                    }}
                  />
                );
              })}
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async () => {
  const data = await client.fetch<ISanityDog[]>(DogsQuery);
  return {
    props: {
      dogs: data,
    },
  };
};
